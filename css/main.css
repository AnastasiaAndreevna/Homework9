/*! normalize-scss | MIT/GPLv2 License | bit.ly/normalize-scss */html{line-height:1.15;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}article,aside,footer,header,nav,section{display:block}h1{font-size:2em;margin:0.67em 0}figcaption,figure{display:block}figure{margin:1em 40px}hr{box-sizing:content-box;height:0;overflow:visible}main{display:block}pre{font-family:monospace, monospace;font-size:1em}a{background-color:transparent;-webkit-text-decoration-skip:objects}abbr[title]{border-bottom:none;text-decoration:underline;text-decoration:underline dotted}b,strong{font-weight:inherit}b,strong{font-weight:bolder}code,kbd,samp{font-family:monospace, monospace;font-size:1em}dfn{font-style:italic}mark{background-color:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-0.25em}sup{top:-0.5em}audio,video{display:inline-block}audio:not([controls]){display:none;height:0}img{border-style:none}svg:not(:root){overflow:hidden}button,input,optgroup,select,textarea{font-family:sans-serif;font-size:100%;line-height:1.15;margin:0}button{overflow:visible}button,select{text-transform:none}button,html [type="button"],[type="reset"],[type="submit"]{-webkit-appearance:button}button::-moz-focus-inner,[type="button"]::-moz-focus-inner,[type="reset"]::-moz-focus-inner,[type="submit"]::-moz-focus-inner{border-style:none;padding:0}button:-moz-focusring,[type="button"]:-moz-focusring,[type="reset"]:-moz-focusring,[type="submit"]:-moz-focusring{outline:1px dotted ButtonText}input{overflow:visible}[type="checkbox"],[type="radio"]{box-sizing:border-box;padding:0}[type="number"]::-webkit-inner-spin-button,[type="number"]::-webkit-outer-spin-button{height:auto}[type="search"]{-webkit-appearance:textfield;outline-offset:-2px}[type="search"]::-webkit-search-cancel-button,[type="search"]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}fieldset{padding:0.35em 0.75em 0.625em}legend{box-sizing:border-box;display:table;max-width:100%;padding:0;color:inherit;white-space:normal}progress{display:inline-block;vertical-align:baseline}textarea{overflow:auto}details{display:block}summary{display:list-item}menu{display:block}canvas{display:inline-block}template{display:none}[hidden]{display:none}@font-face{font-family:'DroidSans';src:url("/fonts/DroidSans.eot?#iefix") format("embedded-opentype"),url("/fonts/DroidSans.woff") format("woff"),url("/fonts/DroidSans.ttf") format("truetype"),url("/fonts/DroidSans.svg#DroidSans") format("svg");font-weight:400;font-style:normal}@font-face{font-family:'DroidSans';src:url("/fonts/DroidSans-Bold.eot?#iefix") format("embedded-opentype"),url("/fonts/DroidSans-Bold.woff") format("woff"),url("/fonts/DroidSans-Bold.ttf") format("truetype"),url("/fonts/DroidSans-Bold.svg#DroidSans-Bold") format("svg");font-weight:700;font-style:normal}@font-face{font-family:'Oswald-Heavy';src:url("/fonts/Oswald-Heavy.eot?#iefix") format("embedded-opentype"),url("/fonts/Oswald-Heavy.woff") format("woff"),url("/fonts/Oswald-Heavy.ttf") format("truetype"),url("/fonts/Oswald-Heavy.svg#Oswald-Heavy") format("svg");font-weight:400;font-style:normal}body{padding:0;margin:0;overflow-x:hidden}*{box-sizing:border-box}ul{list-style:none}a{text-decoration:none}.white-space{white-space:pre-line}.clearfix:after{content:"";display:table;clear:both}.container{max-width:1600px;width:100%;margin:0 auto}.header-color{background-color:#df001f;height:15vh;margin-top:-15px}.main-menu{position:relative}.main-menu ul{display:flex;justify-content:flex-start}.main-menu li{padding:20px;padding-top:30px}.main-menu a{color:#fff;font-size:14px;font-weight:700;line-height:44px;text-transform:uppercase}.main-menu .logo{position:absolute;top:10px;left:40rem}.main-slide1{background:url("../img/main-slider1.png");background-size:cover;margin-top:-100px;text-align:center;padding-bottom:100px;border-bottom:3px solid #d3d3d3;box-sizing:border-box;position:relative}.main-slide1:after{content:'';display:block;width:70%;height:3px;background-color:#df001f;position:absolute;left:0;bottom:0;margin-bottom:-3px}.main-slide2{background:url("../img/main-slider2.png");background-size:cover;margin-top:-100px;text-align:center;padding-bottom:100px;border-bottom:3px solid #d3d3d3}.main-slide3{background:url("../img/main-slider3.png");background-size:cover;margin-top:-100px;text-align:center;padding-bottom:100px;border-bottom:3px solid #d3d3d3}h1{text-align:center;padding-top:230px;padding-left:450px;color:#df001f;font-family:"Oswald", sans-serif;font-size:116px;font-weight:bold;line-height:85px;text-transform:uppercase}h1 span{margin-top:-40px;display:block;color:#333333;font-family:"Great Vibes", sans-serif;font-size:80px;font-weight:400;line-height:160px;text-transform:capitalize}.footer-menu{display:flex;justify-content:center;margin-top:7rem}.footer-menu li{padding-right:25px}.footer-menu a{color:#333333;font-family:"Droid Sans", sans-serif;font-size:13px;font-weight:400;line-height:44px;text-transform:uppercase}footer p{color:#333333;font-size:13px;font-weight:400;line-height:44px;padding-left:25rem;padding-bottom:10px}footer span{color:#df001f;font-size:28px;font-weight:400;font-style:italic}.subscribe{margin-top:15rem}.subscribe h4{color:#282828;font-family:"Droid Sans", sans-serif;font-size:16px;font-weight:400;line-height:24px;margin:10px}.title-section,.title-section .span-section{color:#333333;font-family:Oswald, sans-serif;font-size:32px;font-weight:400;line-height:30px;white-space:pre-line;margin-top:5rem;margin-left:14rem}.title-section .span-section{margin-left:0;color:#df001f;font-family:"Great Vibes", sans-serif}.block-img{position:relative;display:flex;justify-content:center}.block-img li{padding-right:20px}.block-img .picture{width:300px;border-bottom:70px solid #df001f}.artist{position:absolute;bottom:2px;margin-left:20px;margin-top:-4px;background-color:#df001f;white-space:pre-line;color:white;font-family:Oswald, sans-serif;font-size:22px;font-weight:400;line-height:20px}.artist span{font-family:"Droid Sans", sans-serif;font-size:16px}.concert{float:left;padding-right:70px;margin-left:8rem}.concert .upcoming{margin-left:2px}.concert h3{color:#333333;font-family:Oswald, sans-serif;font-size:22px;font-weight:500;line-height:30px}.concert-ticket{padding-top:10rem}.concert-ticket dl{overflow:hidden;padding:0;margin:0 0 30px}.concert-ticket dl dt{float:left;clear:left;margin-top:0}.concert-ticket dl dt dd{margin:0 0 15px 60px}.concert-ticket dl dt dd:before{display:inline-block;margin:0 5px;content:":"}.video{float:right;margin-top:-27rem;margin-right:8rem}.video .right{margin-top:50px;margin-left:20px}.accordionist .accordionist-bg{background:#333 url("../img/accordionist.png") right top no-repeat;background-size:contain;min-height:80vh;padding:80px 0 80px 100px;margin-top:80px}.accordionist .accordionist-bg h2{color:#fff;font-family:"Droid Sans", sans-serif;font-size:32px;font-weight:500;line-height:20px;text-transform:uppercase}.accordionist-1982{color:#fff;font-family:"Droid Sans", sans-serif;font-size:22px;font-weight:400;white-space:pre-line}.accordionist-1982 span{font-family:"Great Vibes", sans-serif;font-size:65px;font-weight:400;line-height:30px}.audio iframe{margin-left:10rem}.lists{margin-left:10rem}.lists .first-list li,.lists .second-list li,.lists .third-list li,.lists .fourth-list li{display:inline-block;width:22%}.link-music{border-bottom:1px solid #999999}.instagram-feed{float:right;margin-top:-31rem;margin-right:35px}.instagram-feed .insta-title{margin-right:2rem}.instagram-feed li{display:inline-block;width:49%}.download-background{background:url("../img/download-background.png") no-repeat center/auto;height:70vh;text-align:center}.download-background h2{color:#fff;font-family:Oswald, sans-serif;font-size:32px;font-weight:500;line-height:48px;padding-top:7rem}.download-background p{margin-top:-22px;color:#fff;font-family:"Droid Sans", sans-serif;font-size:22px;font-weight:400;line-height:30px}.button-purchase{position:absolute;right:94px;top:35px}.button-purchase .link-purchase{background-color:#fff;color:#df001f;font-family:"Droid Sans", sans-serif;font-size:12px;font-weight:700;line-height:30px;text-transform:uppercase;border-radius:25px;padding:21px 44px 20px 44px}.container-button{padding-left:280px;text-align:center}.link-discover{background-color:#df001f;border-radius:25px;padding:21px 46px 20px 46px;color:#fff;font-family:"Droid Sans", sans-serif;font-size:12px;font-weight:700;line-height:30px;text-transform:uppercase}.button-ticket{background-color:#df001f;border-radius:25px;color:#fff;font-family:"Droid Sans", sans-serif;font-size:12px;font-weight:700;line-height:30px;text-transform:uppercase;padding:21px 39px 20px 40px}.button-learn{display:inline-block;background-color:#fff;border-radius:25px;color:#df001f;font-family:"Droid Sans", sans-serif;font-size:12px;font-weight:700;line-height:30px;text-transform:uppercase;padding:15px 40px 10px 39px}form{width:350px;padding:35px 2%;background-color:#121212;border-radius:8px;position:relative;left:30%;transform:translateX(-50%)}input,textarea{transition:input,textarea 11;width:100%;background-color:transparent;border:none;border-bottom:1px solid #fff;font-size:1.9rem;line-height:2;margin-bottom:2rem;resize:none}.popup-button{width:100%;height:40px;border-radius:8px;border:none;background-color:#fff;margin-bottom:2rem}.modal-close{font-size:2.5rem;position:absolute;right:-30px;top:-30px;font-weight:bold;color:#fff}.modal-close:hover{color:#121212;cursor:pointer}#modal_1{display:none}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
